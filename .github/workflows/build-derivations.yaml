name: "build-derivations"

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        machine:
          - host: athena
          - host: charon
          - host: demeter
          - host: hermes
          - host: icarus
          - host: orpheus
          - host: penelope
          - host: pythia
          - host: zeus

    steps:
      #- uses: wimpysworld/nothing-but-nix@main
      - uses: actions/checkout@v4
      - name: "Setup Nix cache"
        run: |
          sudo mkdir -p /etc/nix
          echo "machine nix-cache.salamon.xyz password ${{ secrets.ATTIC_TOKEN }}" | sudo tee /etc/nix/netrc > /dev/null

      - uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            substituters = https://nix-cache.salamon.xyz/homelab https://cache.nixos.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= homelab:leKffLkOCSfX8pPGaQltduLxJNNVmG5oGPt6w3fH4t0=
            always-allow-substitutes = true
            allow-import-from-derivation = false

      - name: "Decrypt repo secrets"
        run: |
          echo ${{ secrets.AGECRYPT_KEY }} | base64 -d > key.txt
          nix run nixpkgs#git-agecrypt init
          nix run nixpkgs#git-agecrypt config -- add -i key.txt
          rm .git/index
          git checkout HEAD -- "$(git rev-parse --show-toplevel)"
          rm key.txt

      - name: Check if build needed
        id: build-needed
        run: |
          nix build .#nixosConfigurations.${{ matrix.machine.host }}.config.system.build.toplevel --dry-run 2> dry-run-output
          echo "needs-build=$(cat dry-run-output | grep 'will be built' &> /dev/null && echo 1 || echo 0)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build system
        if: steps.build-needed.outputs.needs-build == '1'
        run: |
          nix build .#nixosConfigurations.${{ matrix.machine.host }}.config.system.build.toplevel

      - name: Push system
        if: steps.build-needed.outputs.needs-build == '1'
        run: |
          nix run nixpkgs#attic-client login ci https://nix-cache.salamon.xyz ${{ secrets.ATTIC_TOKEN }}
          nix run nixpkgs#attic-client push homelab result -j 2

      - name: Update key-val store
        if: github.ref == 'refs/heads/main'
        run: |
          curl -X POST --url "https://kv-proxy.salamon.xyz/builds/nixos-system-${{ matrix.machine.host }}" \
               -H  "Authorization: Bearer ${{ secrets.KV_PROXY_TOKEN }}" \
               -d  "$(readlink result || nix eval --raw --read-only .#nixosConfigurations.${{ matrix.machine.host }}.config.system.build.toplevel)"
